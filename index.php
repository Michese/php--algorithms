<?php
echo "<h2>Интерполяционный поиск</h2>";

$arr = [1, 2, 4, 16, 17, 23, 27, 32, 35, 36, 36, 41, 42, 49, 55, 58, 59, 60, 62, 66, 69, 70, 72, 73, 76, 82, 82, 85, 85, 86, 86, 90, 91, 94, 94, 95, 99, 101, 107, 110, 111, 114, 114, 118, 121, 121, 123, 130, 140, 144, 145, 145, 153, 161, 165, 168, 168, 170, 173, 179, 179, 183, 186, 189, 193, 203, 212, 217, 223, 226, 229, 234, 234, 234, 235, 236, 242, 254, 255, 257, 257, 262, 264, 269, 271, 274, 284, 286, 291, 296, 303, 307, 307, 310, 314, 316, 317, 318, 320, 321, 324, 325, 328, 332, 337, 338, 339, 340, 340, 346, 349, 349, 355, 358, 359, 364, 366, 368, 369, 380, 385, 387, 392, 394, 396, 401, 403, 403, 405, 412, 421, 422, 422, 424, 424, 424, 425, 426, 433, 436, 439, 447, 448, 449, 451, 452, 452, 453, 453, 454, 457, 459, 460, 461, 464, 464, 465, 466, 467, 471, 474, 476, 477, 479, 485, 490, 491, 492, 502, 503, 504, 506, 507, 512, 517, 520, 531, 531, 534, 540, 550, 550, 550, 563, 568, 569, 571, 576, 577, 577, 595, 600, 602, 606, 613, 614, 622, 624, 629, 629, 629, 633, 634, 651, 657, 662, 666, 667, 668, 672, 673, 677, 680, 684, 690, 693, 693, 694, 697, 702, 702, 711, 715, 715, 717, 718, 724, 739, 741, 744, 747, 747, 748, 749, 749, 750, 753, 755, 756, 758, 765, 766, 774, 783, 787, 789, 792, 793, 793, 794, 799, 800, 802, 809, 817, 819, 820, 822, 831, 842, 847, 850, 851, 852, 855, 865, 866, 868, 886, 889, 895, 896, 902, 903, 903, 914, 915, 917, 921, 922, 924, 930, 937, 937, 945, 948, 955, 958, 960, 961, 961, 976, 976, 979, 980, 980, 985, 985, 996, 999, 999];
//for ($count = 0; $count < 300; $count++) {
//    $arr[] = randNumber();
//}
//sort($arr);
//echo "{";
//for ($count = 0; $count < 300; $count++) {
//    echo "$arr[$count], ";
//}
//echo "}<br>" . $arr[0] . "<br>";
// $arr[findNumber($arr, 59)]
echo $arr[findNumber($arr, 16, count($arr))];
function findNumber($arr, $number, $size)
{
    $beginIndex = 0;
    $endIndex = $size - 1;
    $index = 0;
    while ($arr[$beginIndex] <= $number && $arr[$endIndex] >= $number) {
        $index = $beginIndex + (($number - $arr[$beginIndex]) * ($endIndex - $beginIndex)) / ($arr[$endIndex] - $arr[$beginIndex]);
        if ($arr[$index] > $number) {
            $endIndex = (int)($index - 1);
        } else if ($arr[$index] < $number) {
            $beginIndex = (int)($index + 1);
        } else {
            return $index;
        }
    }
    return -1;
}

function randNumber()
{
    return rand(1, 1000);
}
